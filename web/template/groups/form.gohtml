{{ define "title"}}<title>{{.title}}</title>{{ end }}
      
{{ define "content"}}
  {{ template "popup" . }}

  <!-- group: {{.group}} -->

  <div class="m-2" x-data="groupFormState">
    <div class="flex mb-2 gap-2">
      <form 
        id="group-form"
        class="flex flex-col w-full md:w-1/3 mx-auto gap-4 p-2 w-[28vw]"
        {{if eq .group nil}}hx-post{{else}}hx-patch{{end}}="/groups"
        hx-ext="json-enc"
        hx-target-5*="#popupMessage"
        hx-indicator="#spinner"
        hx-disabled-elt="input, button"
        :hx-vals="JSON.stringify({'users':existingUsers})"
      >
        {{if ne .group nil}}
          <input name="{{if .group.MongoId}}_id{{else}}id{{end}}" type="hidden" value="{{if .group.MongoId }}{{.group.MongoId}}{{else}}{{.group.Id}}{{end}}" />
        {{end}}

        <label for="name" class="{{if eq .group nil}}after:content-['*'] after:ml-0.5 after:text-red-500{{end}} block font-medium text-slate-700 mr-auto my-auto">Name</label>
        <input name="name" class="mt-1 px-3 py-2 bg-white border shadow-sm border-slate-300 placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-sky-500 block rounded-md sm:text-sm focus:ring-1" {{if eq .group nil}}required{{end}} value="{{if ne .group nil}}{{.group.Name}}{{end}}" />

        <label for="type" class="{{if eq .group nil}}after:content-['*'] after:ml-0.5 after:text-red-500{{end}} block font-medium text-slate-700 mr-auto my-auto">Type</label>
        <input name="type" class="mt-1 px-3 py-2 bg-white border shadow-sm border-slate-300 placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-sky-500 block rounded-md sm:text-sm focus:ring-1" {{if eq .group nil}}required{{end}} value="{{if and (ne .group nil) (ne .group.Type nil)}}{{.group.Type}}{{end}}" />

        {{ if .group }}
        <div class="flex gap-4">
          <label for="type" class="{{if eq .group nil}}after:content-['*'] after:ml-0.5 after:text-red-500{{end}} block font-medium text-slate-700 my-auto">Users</label>
          <span @click="toggleAddUserPopup" class="bx bx-plus text-green-400 my-auto text-xl"> </span>

          <div id="addUsersPopup" class="hidden absolute w-1/3 rounded-2xl border border-blue-100 bg-white p-4 shadow-lg sm:p-6 lg:p-8" role="alert">
            <div class="flex items-center gap-4">
              <span class="text-green-400 bx bx-plus text-2xl"> </span>

              <p class="font-medium sm:text-lg">Select users to be added</p>
            </div>

            <div id="availableUsersList" class="mt-4 text-gray-500">
              <template x-for="user in availableUsers" :key="user.id">
                <div>
                  <input name="availableUsers" :id="user.id" type="checkbox" />
                  <span x-text="user.name"></span> - <span x-text="user.email"></span>
                </div>
              </template>
            </div>

            <div class="mt-6 sm:flex sm:gap-4">
              <button
                @click="addUserToGroup"
                type="button"
                class="inline-block w-full rounded-lg bg-blue-500 px-5 py-3 text-center text-sm font-semibold text-white sm:w-auto"
              >
                Add
              </button>

              <button
                type="button"
                class="mt-2 inline-block w-full rounded-lg bg-gray-50 px-5 py-3 text-center text-sm font-semibold text-gray-500 sm:mt-0 sm:w-auto"
                @click="toggleAddUserPopup"
              >
                Close
              </button>
            </div>
          </div>
        </div>

        <div id="existingUsersList">
          <template x-for="user in existingUsers" :key="user.id">
            <div >
              <span class="bx bx-user"></span>
              <span x-text="user.name"></span> - <span x-text="user.email"></span>
              <span :id="user.id" @click="removeUserFromGroup" class="bx bx-trash text-red-400"></span>
            </div>
          </template>
        </div>
        {{ end }}

        <button type="submit" class="flex gap-2 border-2 rounded-md shadow-sm border-slate-300 w-fit p-2">
          {{if eq .group nil}}Add{{else}}Update{{end}}
          <div id="spinner" class="htmx-indicator animate-spin w-5 h-5 rounded-full m-auto border-2 border-solid border-slate-500 border-t-transparent"></div>
        </button>
      </form>
    </div>
  </div>
  <script>
    function groupFormState(){
      return {
        toggleAddUserPopup: function(){
          const addUsersPopupEle = document.getElementById("addUsersPopup")
          const classes = Array.from(addUsersPopupEle.classList)
          if(classes.find(cls=>cls==="hidden")){
            addUsersPopupEle.classList.remove("hidden")
          }else{
            addUsersPopupEle.classList.add("hidden")
          }
        },
        availableUsers: [
          {{- range .users}}
            { 
              {{GetIdKeyName}}:{{- .Id -}},
              name:{{- .Name -}},
              email:{{- .Email -}}, 
            },
          {{end}}
        ],
        existingUsers: [
          {{if and .group .group.Users}}
            {{- range .group.Users}}
              { 
                {{GetIdKeyName}}:{{- .Id -}},
                name:{{- .Name -}},
                email:{{- .Email -}}, 
              },
            {{end}}
          {{end}}
        ],
        removeUserFromGroup: function(e){
          //console.log("delete", e.target.id)
          const idx = this.existingUsers.findIndex(user=>user.id===+e.target.id)
          if (idx === -1){
            console.log("delete err", idx, e.target.id)
            return
          }
          const removedUser = this.existingUsers.splice(idx,1)
          this.availableUsers.push(removedUser?.[0])
        },
        addUserToGroup: function(e){
          const availableUsersEles = document.querySelectorAll('input[type="checkbox"]:checked[name="availableUsers"]')
          availableUsersEles.forEach(ele=>{
            const idx = this.availableUsers.findIndex(user=>user.id===+ele.id)
            const newUsers = this.availableUsers.splice(idx,1)
            this.existingUsers.push(newUsers[0])
          })
          this.toggleAddUserPopup()
        },
      }
    }
    </script>
  {{end}}

{{ define "footer" }}<div></div>{{ end }}
